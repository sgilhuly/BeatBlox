<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar grid_width;
globalvar grid_height;
globalvar block_size;
globalvar max_colours;
globalvar colours;
globalvar colours_destroyed;

max_tick=30;
tick=0;

grid_width = 10;
grid_height = 10;
block_size = 50;
max_colours = 3;
colours[0] = make_colour_rgb(255, 255, 0);
colours[1] = make_colour_rgb(0, 255, 255);
colours[2] = make_colour_rgb(255, 0, 255);
colours_destroyed[0] = make_colour_rgb(125, 125, 0);
colours_destroyed[1] = make_colour_rgb(0, 125, 125);
colours_destroyed[2] = make_colour_rgb(125, 0, 125);
room_set_width(rmTest, grid_width*block_size);
room_set_height(rmTest, grid_height*block_size);

randomize();

for(r = 0; r &lt; grid_height; r++) {
    for(c = 0; c &lt; grid_width; c++) {
        blocks[r, c] = instance_create(c*block_size, r*block_size, objBlock);
    }
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(tick &gt;= max_tick) {
    tick=0;
    checkAlignThree(true);
    checkAlignThree(false);    
    //checkDestroyed(blocks);
    for(var r = 0; r &lt; grid_height; r++) {
        for(var c = 0; c &lt; grid_width; c++) {
            notifyTick(blocks[r, c]);
        }
    }
} else {
    tick++;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
